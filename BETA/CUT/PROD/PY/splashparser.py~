#! /usr/bin/python                                                                                                                                                                                  
# -*- coding: utf-8 -*-

import sys
import os
import re
import httplib
import urllib
import urlparse
import string
import pickle
import time
from bs4 import BeautifulSoup

reload(sys)
sys.setdefaultencoding("utf-8")

x = 0

STG = 'http://stg.nymetro.com/thecut/'
EC2 = 'http://ec2.qa.nymetro.com/thecut/'
PROD = 'http://nymag.com/thecut/'

SPLASH = sys.argv[1]


class MyOpener(urllib.FancyURLopener):
    version = 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15'


class BeautySplash():

    def __init__(self):

        self.BASEURL = BASEURL
        
        self.data = {'lede':[], 'article':[]}
        
        self.req = MyOpener()
        self.page = self.req.open(self.BASEURL + SPLASH)
        self.text = self.page.read()
        self.page.close()
        self.soup = BeautifulSoup(self.text)
        self.spam = self.soup.find_all
        
        self.get_lede_data()
        self.get_article_data()
        
        ################################################################################
        
    def get_lede_data(self):
    
        link_list = []
        for tag in self.spam('li', attrs={'class':'ledeArticle'}):
    		    
            link = tag.find('a')['href']
            link_list.append(link)
            
        self.data['lede'] = link_list  
        
        ################################################################################
        
    def get_article_data(self):
    	
    	link_list = []
        for tag in self.spam('article', attrs={'class':'feedEntry'}):
    		    
            link = tag.find('a')['href']
            link_list.append(link)
            
        self.data['article'] = link_list  
    
        ################################################################################

"""   
FUTURE FEATURE:

def fail_writer(test):
	
    test = test	
    t = datetime.time
    print t
    f = open('../failures.txt')
    f.write(t + '\t' + BASEURL + '\n')
    print test

"""

for x in range(2,3):
	
    if x == 0:
    	BASEURL = STG
    	ENV = 'stg'	
    
    elif x == 1:
    	BASEURL = EC2
    	ENV = 'ec2'
        
    else:
    	BASEURL = PROD
    	ENV = 'prod'
    	
    b = BeautySplash()
    
    pickle.dump(b.data, open('/Users/nsmith/Desktop/BETA/CUT/DATA/PICKLE/' + str(SPLASH) + str(ENV) + '.p', 'wb'))
    
    x += 1


